{"Python is a general-purpose programming language supporting multiple programming paradigms. Select the programming paradigm which does not appy to Python.  ": [["Object-oriented  ", "Procedural  ", "Functional  ", "Symbolic"], "Symbolic"], "After what progrmaming language was Python implemented?  ": [["Oracle  ", "C++  ", "ABC", "Java"], "ABC"], "Name the primary features of Python  ": [["Exception handling", "Form submittals  ", "Storing and archiving  ", "Integrating"], "Exception handling"], "Which year was the updated versions of Python 2.0 and 3.0 released?  ": [["1990 and 1994  ", "2000 and 2008  ", "1989 and 1990  ", "2001 and 2002  "], "2000 and 2008"], "Print built-in function was introduced in version  ": [["2", "1", "2.6  ", "3"], "3"], "Which of the following is invalid?  ": [["_a = 1  ", "__a = 1  ", "__str__ = 1  ", "none of the mentioned  "], "none of the mentioned  "], "Which of the following is an invalid variable?  ": [["my_string_1  ", "1st_string  ", "foo  ", " _  "], "1st_string  "], "Why are local variable names beginning with an underscore discouraged?  ": [["they are used to indicate a private variables of a class  ", "they confuse the interpreter  ", "they are used to indicate global variables  ", "they slow down execution  "], "they are used to indicate a private variables of a class"], "Which of the following is not a keyword?  ": [["eval  ", "assert  ", "nonlocal  ", "pass  "], "eval  "], "Which of the following is an invalid statement?  ": [["abc = 1,000,000  ", "a b c = 1000 2000 3000  ", "a,b,c = 1000, 2000, 3000  ", "a_b_c = 1,000,000  "], "a b c = 1000 2000 3000  "], "Name few building blocks of Python  ": [["Functions  ", "arrays  ", "tables  ", "Flowcharts"], "arrays"], "Out of the options, on which OS Python can be used ": [["Bada OS  ", "Mac  ", "AS/400  ", "Android"], "AS/400"], "What is the binary file extension generated by python?  ": [["php  ", "pyc  ", "bin  ", "ini"], "pyc"], "Which layer acts as a layer of logic between the hardware and the code?  ": [["library modules  ", "binary files  ", "machine language  ", "Python interpreter"], "Python interpreter"], "What is the structure generated after the Python source code is compiled?  ": [[".ini  ", ".pyc  ", "exe file  ", ".bin"], ".pyc"], "What does CPython and Jython represent?  ": [["They represent the successive versions of Python.  ", "They represent internal functions of Python.  ", "Implementations of Python  ", "They are the compilers of Python program.  "], "Implementations of Python"], "What kind of executables generate a standalone binary executable?  ": [["Frozen binaries  ", "Python .NET  ", "CPython  ", "byte codes  "], "Frozen binaries"], "Which of the versions introduced the data hiding feature?  ": [["Python 1.5  ", "Python 1.0  ", "Python 2.0  ", "Python 1.6"], "Python 1.0"], "What is similar between Javascript and Python?  ": [["Overloading of the + operator  ", "Object base supports functions and variables without class definition  ", "Both have a UNIX scripting background.  ", "The features are identical.  "], "Object base supports functions and variables without class definition"], "What is the default location of Python installation?  ": [["C:/  ", "D:/ ", "G:/  ", "E:/  "], "C:/"], "How do you go to the command line python interpreter?  ": [["From Start, select python 3.6 and click to open.  ", "Select the Python command line directly from the exe file.  ", "Type cmd Python from the command line in Windows.  ", "In Windows, select Python from the installed programs.  "], "From Start, select python 3.6 and click to open."], "How to create a python program?  ": [["Write the program in a text file and upload to the Python folder.  ", "Write the program in the Python editor and execute it.  ", "Use the Print command in the Python interpreter   ", "Write the program using the notepad  "], "Use the Print command in the Python interpreter"], "Name few components of IDLE  ": [["Wordpad  ", "code editor, built-in automation  ", "Project tracker  ", "bug tracker  "], "code editor, built-in automation"], "What toolkit is used to code in IDLE?  ": [["PHP text editor  ", "Soap toolkit  ", "Swing toolkit  ", "Tkinter GUI toolkit  "], "Tkinter GUI toolkit"], "Name few of the features of IDLE  ": [["user interface window  ", "command line entries  ", "debugging and configuration  ", "built-in print option  "], "debugging and configuration"], "Name few development environment for Python  ": [["Soap  ", "Zeus  ", "Eric and Emacs  ", "Eclipse  "], "Eric and Emacs"], "What IDEs are used to develop enterprise and professional applications using Python?  ": [["Netbeans  ", "Wordpad  ", "Sublime and Komodo  ", "Brackets code editor  "], "Sublime and Komodo"], "what platforms does Wing IDE support?  ": [["Android  ", "MAC  ", "Linux  ", "Unix  "], "Linux"], "Where is the output from running a saved Python file is displayed?  ": [["Command prompt  ", "Browser  ", "Shell window  ", "Desktop  "], "Shell window"], "What is the first step to start the interactive Python interpreter?  ": [["Double-click on the Python icon  ", "Select from the Windows explorer  ", "Go to Windows>Start>Programs and select the interpreter.  ", "Type a message with no arguments in the Python interpreter  "], "Type a message with no arguments in the Python interpreter"], "What are the two types of windows available in Python IDLE?  ": [["PHP  ", "Microsoft  ", "Shell and Editor  ", "Desktop  "], "Shell and Editor"], "Name the two primary things to be taken care of during Python programming  ": [["Language  ", "color  ", "Style and indentation  ", "Format  "], "Style and indentation"], "What symbol is used to display comments in Python code?  ": [["#  ", "$  ", "%  ", "<>   "], "#"], "What are the compound data types?  ": [["Graph  ", "Tuples and Strings  ", "Float  ", "Integer  "], "Tuples and Strings"], "Which data type stores numbers with fractional values?  ": [["Generic  ", "Float  ", "Integer  ", "String  "], "Float"], "From the options, choose the binary literal.  ": [["0B01011  ", "0o10  ", "0xA  ", "0"], "0B01011"], "What does the letter E/e used in float data type represent?    ": [["Represents the decimal position  ", "Represents negative sign  ", "Represents the power of 10   ", "Represents positive sign  "], "Represents the power of 10"], "Which indicates the float data type in the float value syntax?  ": [["number with decimal values  ", "A built-in function float ()   ", "number with 0B suffixed  ", "numbers with zeros  "], "A built-in function float ()"], "What are complex data types?  ": [["numbers with various levels of operators  ", "algebraic equations  ", "compound numbers  ", "<real part> + <imaginary part>j  "], "<real part> + <imaginary part>j"], "The data type of True or False values  ": [["String  ", "Boolean  ", "Complex  ", "Text  "], "Boolean"], "Based on the functionality, which data type can be represented as string and numerals?  ": [["Float  ", "Sign  ", "Boolean  ", "Char  "], "Boolean"], "How to convert a value to boolean?  ": [["Using the bool() function  ", "by prefixing with the word boolean  ", "by prefixing with the boolean sign  ", "suffixing boolean within brackets  "], "Using the bool() function"], "Which data type is also called a sequence?  ": [["compound  ", "float  ", "boolean  ", "complex  "], "compound"], "Which data type does string belong to?  ": [["Alphabets  ", "Compound  ", "boolean  ", "Char  "], "Compound"], "How is a string represented?  ": [["Alphabetical letters  ", "characters enclosed within quotation marks on both sides  ", "a complete sentence  ", "phrases  "], "characters enclosed within quotation marks on both sides"], "What symbol is used to denote multi-line strings?  ": [["single quotes  ", "triple quotes  ", "double quotes  ", "Brackets  "], "triple quotes"], "Which operator is used to extract characters from a string?": [["{start:end}  ", "()  ", "\" \"  ", "[start:end]  "], "[start:end]"], "What is the output of the string - print(Example_string[2])  ": [["Prints the number 2  ", "Prints the entire string within brackets  ", "Prints the value of the index 2  ", "Prints only the characters ignoring the number  "], "Prints the value of the index 2"], "Collection of random objects with no size and type. What type of data type does this denote?  ": [["text  ", "strings  ", "characters  ", "List data type  "], "List data type"], "Out of the options, name the features that list data type support  ": [["formatting  ", "indexing and concatenation  ", "punctuation  ", "line breaks  "], "indexing and concatenation"], "Once created, this data type cannot be changed. Which data type does this denote?  ": [["Lists  ", "Strings  ", "Tuple  ", "Boolean  "], "Tuple"], "How to define Tuple data types?  ": [["Enlcosed within brackets  ", "Enclosed in square brackets  ", "Enclosed within quotes  ", "Set of characters  "], "Enlcosed within brackets"], "What is the specific and interesting feature of tuple data type?  ": [["Mathematical calculation is possible  ", "Values on the left of the operator can be assigned to the values on the right of the operator.  ", "works with equations  ", "Values cannot be reassigned"], "Values cannot be reassigned"], "Why are Dictionaries in Python called mutable?  ": [["Elements in the Dictionary can be added, modified and deleted.  ", "Elements in the Dictionary can be merged with another Dictionary.  ", "The Dictionary can be sollated with another.  ", "The elements can be deactivated.  "], "Elements in the Dictionary can be added, modified and deleted."], "How are Dictionaries accessed?  ": [["Dictionaries are accessed based on their position  ", "Dictionaries are accessed based on the index  ", "Dictionaries are accessed using keys  ", "Dictionaries are accessed alphabetically  "], "Dictionaries are accessed using keys"], "The values of the Dictionary keys can be accessed using the symbol:  ": [["{}  ", "([])  ", "()  ", "[]  "], "([])"], "The values within the keys are separated by:  ": [["commas  ", "curly braces  ", "apostrophe  ", "period  "], "commas"], "How is an empty dictionary represented?  ": [["Empty Dict = 0  ", "My Dict = { }  ", "Dict = null  ", "My Dict = NULL  "], "My Dict = { }"], "What is the difference between sets and dictionaries?  ": [["sets are larger than dictionaries  ", "sets are not restricted to keys  ", "sets are groups of data  ", "sets comprise of numbers and strings  "], "sets are not restricted to keys"], "How is a set created?  ": [["using ({})  ", "create set ()  ", "define set()  ", "()  "], "using ({})"], "What are frozensets?  ": [["frozensets are pre-defined sets  ", "frozensets are similar to set, but immutable  ", "elements are unchangeable  ", "frozensets are changeable sets  "], "frozensets are similar to set, but immutable"], "Why frozensets can be used as keys?  ": [["frozensets comprise of key elements  ", "frozensets are unhashable  ", "frozensets are hashable  ", "frozensets represent major elements  "], "frozensets are hashable  "], "Out of given options, which represents the rule for identifiers?  ": [["keywords can be used as names of identifiers  ", "identifiers can be of specified length  ", "an identifier should not start with a number  ", "an identifier can use special characters  "], "an identifier should not start with a number  "], "Which of the following environment variable for Python tells the Python interpreter where to locate the module files imported into a program? ": [["PYTHONPATH  ", "PYTHONSTARTUP  ", "PYTHONCASEOK  ", "PYTHONHOME  "], "PYTHONPATH"], "What is the output of print list if list = [ 'abcd', 786 , 2.23, 'john', 70.2 ]?": [["[ 'abcd', 786 , 2.23, 'john', 70.2 ]", "list ", "Error", "None of the above."], "[ 'abcd', 786 , 2.23, 'john', 70.2 ]"], "What is the output of print tinylist * 2 if tinylist = [123, 'john']?": [["[123, 'john', 123, 'john']", "[123, 'john'] * 2", "Error", "None of the above."], "[123, 'john', 123, 'john']"], "Which of the following function convert a String to an object in python?  ": [["repr(x)  ", "eval(str)  ", "tuple(s)  ", "list(s)  "], "eval(str)  "], "Which of the following operator in python evaluates to true if the variables on either side of the operator point to the same object and false otherwise? ": [["**  ", "//  ", "is  ", "not in  "], "is  "], "Which of the following function randomizes the items of a list in place?  ": [["shuffle(lst)  ", "capitalize()  ", "isalnum()  ", "isdigit()  "], "shuffle(lst)  "], "Which of the following function checks in a string that all characters are in lowercase?  ": [["islower()  ", "isnumeric()  ", "isspace()  ", "istitle()  "], "islower()  "], "Which of the following function checks in a string that all characters are decimal?  ": [["upper()  ", "isdecimal()  ", "swapcase()  ", "title()  "], "isdecimal()  "], "What is the output of L[2] if L = [1,2,3]?  ": [["Error", "2", "3", "None of the above.  "], "3"], "What is the following function sorts a list?  ": [["list.reverse()  ", "list.sort([func])  ", "list.pop(obj=list[-1])  ", "list.remove(obj)  "], "list.sort([func])  "], "Which of these about a set is not true?  ": [["Mutable data type  ", "Allows duplicate values  ", "Data type with unordered values  ", "Immutable data type"], "Immutable data type"], "Which of the following is not the correct syntax for creating a set?  ": [["set([[1,2],[3,4]])", "set([1,2,2,3,4])", "set((1,2,3,4))", "{1,2,3,4}"], "set([[1,2],[3,4]])"], "Which of the following statements is used to create an empty set?  ": [["{ }", "set()", "[ ]", "( )"], "set()"], "If a={5,6,7,8}, which of the following statements is false?  ": [["print(len(a))  ", "print(min(a))  ", "a.remove(5)  ", "a[2]=45"], "a[2]=45"], "If a={5,6,7}, what happens when a.add(5) is executed?  ": [["a={5,5,6,7}  ", "a={5,6,7}  ", "Error as there is no add function for set data type  ", "Error as 5 already exists in the set  "], "a={5,6,7}  "], "Which of these about a frozenset is not true?  ": [["Mutable data type  ", "Allows duplicate values  ", "Data type with unordered values  ", "Immutable data type  "], "Mutable data type  "], "Which of the following lines of code will result in an error?  ": [["s={abs}  ", "s={4, \u2018abc\u2019, (1,2)}  ", "s={2, 2.2, 3, \u2018xyz\u2019}  ", "s={san}  "], "s={san}  "], "Which of the following functions cannot be used on heterogeneous sets? ": [["pop  ", "remove  ", "update  ", "sum  "], "sum  "], "Which of the following functions will return the symmetric difference between two sets, x and y?  ": [["x | y  ", "x ^ y  ", "x & y  ", "x \u2013 y  "], "x & y  "], "The ____________ function removes the first element of a set and the last element of a list.  ": [["remove  ", "pop  ", "discard  ", "dispose  "], "pop  "], "If we have two sets, s1 and s2, and we want to check if all the elements of s1 are present in s2 or not, we can use the function: ": [["s2.issubset(s1)  ", "s2.issuperset(s1)  ", "s1.issuperset(s2)  ", "s1.isset(s2)  "], "s2.issuperset(s1)  "], "Which of the following statements create a dictionary?  ": [["d = {}  ", "d = {\u201cjohn\u201d:40, \u201cpeter\u201d:45}  ", "d = {40:\u201djohn\u201d, 45:\u201dpeter\u201d}  ", "All of the mentioned  "], "All of the mentioned"], "Suppose d = {\u201cjohn\u201d:40, \u201cpeter\u201d:45}, to delete the entry for \u201cjohn\u201d what command do we use  ": [["d.delete(\u201cjohn\u201d:40)  ", "d.delete(\u201cjohn\u201d)  ", "del d[\u201cjohn\u201d].  ", "del d(\u201cjohn\u201d:40)  "], "del d[\u201cjohn\u201d].  "], "Suppose d = {\u201cjohn\u201d:40, \u201cpeter\u201d:45}. To obtain the number of entries in dictionary which command do we use?  ": [["d.size()  ", "len(d)  ", "size(d)  ", "d.len()  "], "len(d)  "], "Which of these about a dictionary is false?  ": [["The values of a dictionary can be accessed using keys  ", "The keys of a dictionary can be accessed using values  ", "Dictionaries aren\u2019t ordered  ", "Dictionaries are mutable  "], "The keys of a dictionary can be accessed using values  "], "Which of the following is not a declaration of the dictionary?  ": [["{1: \u2018A\u2019, 2: \u2018B\u2019}  ", "dict([[1,\u201dA\u201d],[2,\u201dB\u201d]])  ", "{1,\u201dA\u201d,2,\u201dB\u201d}", "{ }  "], "{1,\u201dA\u201d,2,\u201dB\u201d}"], "Which of the following isn\u2019t true about dictionary keys?  ": [["More than one key isn\u2019t allowed  ", "Keys must be immutable  ", "Keys must be integers  ", "When duplicate keys encountered, the last assignment wins  "], "Keys must be integers  "], "Which of the statements about dictionary values is false?  ": [["More than one key can have the same value  ", "The values of the dictionary can be accessed as dict[key].  ", "Values of a dictionary must be unique  ", "Values of a dictionary can be a mixture of letters and numbers  "], "Values of a dictionary must be unique  "], "If a is a dictionary with some key-value pairs, what does a.popitem() do?  ": [["Removes an arbitrary element  ", "Removes all the key-value pairs  ", "Removes the key-value pair for the key given as an argument  ", "Invalid method for dictionary  "], "Removes an arbitrary element  "], "If b is a dictionary, what does any(b) do?  ": [["Returns True if any key of the dictionary is true  ", "Returns False if dictionary is empty  ", "Returns True if all keys of the dictionary are true  ", "Method any() doesn\u2019t exist for dictionary  "], "Returns True if any key of the dictionary is true  "], "Which of the following functions is a built-in function in python?  ": [["seed()  ", "sqrt()  ", "factorial()  ", "print()  "], "print()"], "The function pow(x,y,z) is evaluated as:  ": [["(x**y)**z  ", "(x**y) / z  ", "(x**y) % z", "(x**y)*z  "], "(x**y) % z"], "What is the output of the function complex() ?  ": [["0j", "0+0j", "0", "Error"], "0j"], "The function divmod(a,b), where both \u2018a\u2019 and \u2018b\u2019 are integers is evaluated as:  ": [["(a%b, a//b)  ", "(a//b, a%b)  ", "(a//b, a*b)  ", "(a/b, a%b)  "], "(a//b, a%b)  "], "Which of the following functions does not necessarily accept only iterables as arguments?  ": [["enumerate()  ", "all()  ", "chr()  ", "max()  "], "chr()"], "Which of the following functions accepts only integers as arguments?  ": [["ord()  ", "min()  ", "chr()  ", "any()  "], "chr()"], "Which of the following functions will not result in an error when no arguments are passed to it?  ": [["min()  ", "divmod()  ", "all()  ", "float()  "], "float()"], "Which of the following functions does not throw an error?  ": [["ord()  ", "ord(\u2018 \u2018)  ", "ord(\u201d)  ", "ord(\u201c\u201d)  "], "ord(\u2018 \u2018)  "], "Which of the following is the use of function in python?  ": [["Functions are reusable pieces of programs  ", "Functions don\u2019t provide better modularity for your application  ", "you can\u2019t also create your own functions  ", "All of the mentioned  "], "Functions are reusable pieces of programs  "], "Which keyword is use for function?  ": [["Fun  ", "Define  ", "Def  ", "Function  "], "Def  "], "Which are the advantages of functions in python?  ": [["Reducing duplication of code  ", "Decomposing complex problems into simpler pieces  ", "Improving clarity of the code  ", "All of the mentioned  "], "All of the mentioned  "], "What are the two main types of functions?  ": [["Custom function  ", "Built-in function & User defined function  ", "User function  ", "System function  "], "Built-in function & User defined function  "], "Where is function defined?  ": [["Module  ", "Class  ", "Another function  ", "All of the mentioned  "], "All of the mentioned  "], "What is called when a function is defined inside a class?  ": [["Module  ", "Class  ", "Another function  ", "Method  "], "Method  "], "Which of the following is the use of id() function in python?  ": [["Id returns the identity of the object  ", "Every object doesn\u2019t have a unique id  ", "All of the mentioned  ", "None of the mentioned  "], "Id returns the identity of the object  "], "Which of the following refers to mathematical function?  ": [["sqrt  ", "rhombus  ", "add  ", "Rhombus  "], "sqrt  "], "Python supports the creation of anonymous functions at runtime, using a construct called __________  ": [["Lambda  ", "pi  ", "anonymous  ", "None of the mentioned  "], "Lambda  "], "What is a variable defined outside a function referred to as?  ": [["A static variable  ", "A global variable  ", "A local variable  ", "An automatic variable  "], "A global variable  "], "What is a variable defined inside a function referred to as?  ": [["A global variable  ", "A volatile variable  ", "A local variable  ", "An automatic variable  "], "A local variable  "], "If a function doesn\u2019t have a return statement, which of the following does the function return?  ": [["int  ", "null  ", "None  ", "An exception is thrown without the return statement  "], "None  "], "Is Python case sensitive when dealing with identifiers?  ": [["yes  ", "no  ", "machine dependent  ", "none of the mentioned  "], "yes  "], "What is the maximum possible length of an identifier?  ": [["31 characters  ", "63 characters  ", "79 characters  ", "none of the mentioned  "], "none of the mentioned  "], "Why are local variable names beginning with an underscore discouraged?": [["they are used to indicate a private variables of a class  ", "they confuse the interpreter  ", "they are used to indicate global variables  ", "they slow down execution  "], "they are used to indicate a private variables of a class  "], "Which of these in not a core data type?  ": [["Lists  ", "Dictionary  ", "Tuples  ", "Class  "], "Class  "], "Which of the following will run without errors ?  ": [["round(45.8)  ", "round(6352.898,2,5)  ", "round()  ", "round(7463.123,2,1)  "], "round(45.8)  "], "What error occurs when you execute?  apple = mango  ": [["SyntaxError  ", "NameError  ", "ValueError  ", "TypeError  "], "NameError  "], "What data type is the object below ?  L = [1, 23, \u2018hello\u2019, 1].  ": [["list  ", "dictionary  ", "array  ", "tuple  "], "list  "], "Which of the following results in a SyntaxError ?  ": [["\u2018\u201dOnce upon a time\u2026\u201d, she said.\u2019  ", "\u201cHe said, \u2018Yes!'\u201d  ", "\u20183\\\u2019  ", "\u201d\u2019That\u2019s okay\u201d  "], "\u20183\\\u2019  "], "Select all options that print  hello-how-are-you  ": [["print(\u2018hello\u2019, \u2018how\u2019, \u2018are\u2019, \u2018you\u2019)  ", "print(\u2018hello\u2019, \u2018how\u2019, \u2018are\u2019, \u2018you\u2019 + \u2018-\u2018 * 4)  ", "print(\u2018hello-\u2018 + \u2018how-are-you\u2019)  ", "print(\u2018hello\u2019 + \u2018-\u2018 + \u2018how\u2019 + \u2018-\u2018 + \u2018are\u2019 + \u2018you\u2019)  "], "print(\u2018hello-\u2018 + \u2018how-are-you\u2019)  "], "What is the return value of trunc() ?  ": [["int  ", "bool  ", "float  ", "None  "], "int  "], "Which of the following operators has its associativity from right to left?  ": [["+  ", "//  ", "%  ", "**  "], "**  "], "Which of the following is the truncation division operator?  ": [[" /  ", "%  ", "//  ", "|  "], "//  "], "Which of the following formatting options can be used in order to add \u2018n\u2019 blank spaces after a given string \u2018S\u2019?  ": [["print(\u201c-ns\u201d%S)  ", "print(\u201c-ns\u201d%S)  ", "print(\u201c%ns\u201d%S)  ", "print(\u201c%-ns\u201d%S)  "], "print(\u201c%-ns\u201d%S)  "], "What arithmetic operators cannot be used with strings ?  ": [["+  ", "*  ", "\u2013  ", "All of the mentioned  "], "\u2013  "], "what is the output when following statement is executed ?  >>> print(\u2018x\\97\\x98\u2019)  ": [["Error  ", "97 98  ", "x\\97  ", "\\x97\\x98  "], "x\\97  "], ">>> print(0xA + 0xB + 0xC) :  ": [["0xA0xB0xC  ", "Error  ", "0x22  ", "33"], "33"], "Which of the following commands will create a list?  ": [["list1 = list()  ", "list1 = []", "list1 = list([1, 2, 3])  ", "all of the mentioned"], "all of the mentioned"], "What is the output when we execute list('hello')?  ": [["['h', 'e', 'l', 'l', 'o']  ", "['hello']", "['llo'] ", "['olleh']  "], "['h', 'e', 'l', 'l', 'o']"], "Suppose list1 is [2445,133,12454,123], what is max(list1) ?": [["2445", "133", "12454", "123"], "12454"], "To shuffle the list(say list1) what function do we use ?  ": [["list1.shuffle()  ", "shuffle(list1)  ", "random.shuffle(list1)  ", "random.shuffleList(list1)  "], "random.shuffle(list1)"], "Which of the following statements is wrong about inheritance?  ": [["Protected members of a class can be inherited  ", "The inheriting class is called a subclass  ", "Private members of a class can be inherited and accessed  ", "Inheritance is one of the features of OOP  "], "Private members of a class can be inherited and accessed"], "Suppose B is a subclass of A, to invoke the __init__ method in A from B, what is the line of code you should write?  ": [["A.__init__(self) ", "B.__init__(self)", "A.__init__(B)", "B.__init__(A)"], "A.__init__(self)"], "What does built-in function type do in context of classes?    ": [["Determines the object name of any value  ", "Determines the class name of any value", "Determines class description of any value  ", "Determines the file name of any value  "], "Determines the class name of any value"], "Which of the following is not a type of inheritance?  ": [["Double-level", "Multi-level  ", "Single-level  ", "Multiple  "], "Double-level"], "_____ represents an entity in the real world with its identity and behaviour.    ": [["A method  ", "An object", "A class  ", "An operator  "], "An object"], "_____ is used to create an object.    ": [["class  ", "constructor", "User-defined functions  ", "In-built functions  "], "constructor"], "What is setattr() used for?  ": [["To access the attribute of the object  ", "To set an attribute", "To check if an attribute exists or not  ", "To delete an attribute  "], "To set an attribute"], "What is Instantiation in terms of OOP terminology?  ": [["Deleting an instance of class  ", "Modifying an instance of class  ", "Copying an instance of class  ", "Creating an instance of class"], "Creating an instance of class"], "Which loop is not supported in Python ?": [["for", "while", "do-while", "none of the mentioned"], "do-while"], "Which keyword immediately terminates the loop ? ": [["gotto", "break", "continue", "stop"], "break"], "what is the role of continue keyworld ? ": [["it will break the loop", "skip below statements and continue to loop execution", "will put execution of loop in infinite loop", "none of above"], "skip below statements and continue to loop execution"], "can we use else statment with loops ?": [["yes", "no", "depend on hardware", "none of above"], "yes"], "which of these is known as magic method ?": [["__str__", "eval", "len", "__str"], "__str__"], "double underscore methods also known as ? ": [["lambda method", "dunder method", "private method", "static method"], "dunder method"], "Which method is used to allocate memory to instance during instatiation ? ": [["__init__", "__new__", "__dict__", "__str__"], "__new__"], "object scope is also known as ?": [["global scope", "local scope", "self", "non-local scope"], "non-local scope"], "python is a ____ language ?": [["compiled", "interpreted", "assembly", "machine"], "interpreted"]}